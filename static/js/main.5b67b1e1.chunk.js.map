{"version":3,"sources":["Item.js","List.js","index.js"],"names":["Item","props","useState","value","setValue","index","state","edit","setEdit","item","className","name","undefined","tasks","length","map","task","done","onChange","e","target","onClick","editTask","removeTask","doneTask","disabled","placeholder","onKeyPress","charCode","newTask","handleNewTask","List","id","list","setList","chosenList","setChosenList","chosenValue","setChosenValue","errorListing","setErrorListing","newArrayList","filter","i","deleteList","newList","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b67b1e1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Item(props) {\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst [edit, setEdit] = useState({ index: null, state: null });\r\n\tconst item = props.value;\r\n\tfunction handleNewTask(e) {\r\n\t\tvar value = e.target.value;\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tif (value !== \"\") {\r\n\t\t\t\tprops.newTask({ name: value });\r\n\t\t\t\te.target.value = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"item\">\r\n\t\t\t<div className=\"headerItem\">\r\n\t\t\t\t<h5>{item.name}</h5>\r\n\t\t\t\t<h6>{item.tasks?.length === undefined ? \"0\" : item.tasks?.length} tasks remaining </h6>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tasksItem\">\r\n\t\t\t\t{item.tasks && item.tasks.length > 0 ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{item.tasks.map((task, index) => (\r\n\t\t\t\t\t\t\t<li key={index} className={task.done ? \"done\" : \"\"}>\r\n\t\t\t\t\t\t\t\t{edit.index === index && edit.state === true ? (\r\n\t\t\t\t\t\t\t\t\t<input value={value} onChange={(e) => setValue(e.target.value)} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\ttask.name\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{edit.index === index && edit.state === true ? (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetEdit({ index: index, state: false });\r\n\t\t\t\t\t\t\t\t\t\t\tif (value === \"\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.editTask(index, \"Unnamed\");\r\n\t\t\t\t\t\t\t\t\t\t\t} else props.editTask(index, value);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetEdit({ index: index, state: true });\r\n\t\t\t\t\t\t\t\t\t\t\tsetValue(task.name);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"remove\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tprops.removeTask(index);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={task.done ? \"disabled\" : \"done\"}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tprops.doneTask(index);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tdisabled={task.done}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h4>No tasks for this list</h4>\r\n\t\t\t\t)}\r\n\t\t\t\t<input className=\"newTaskInput\" placeholder=\"New Task\" onKeyPress={(e) => handleNewTask(e)} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Item;\r\n","import { useState } from \"react\";\r\nimport Item from \"./Item\";\r\nfunction List() {\r\n\tconst [list, setList] = useState([\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tname: \"Gym\",\r\n\t\t\ttasks: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Cardio\",\r\n\t\t\t\t\tdone: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Weights\",\r\n\t\t\t\t\tdone: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Coffee\",\r\n\t\t\ttasks: [{ name: \"Porto Bella Coffee\", done: false }],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Work\",\r\n\t\t\ttasks: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Morning meeting\",\r\n\t\t\t\t\tdone: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Tech Project\",\r\n\t\t\t\t\tdone: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: \"Grocery\",\r\n\t\t\ttasks: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Milk\",\r\n\t\t\t\t\tdone: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Potatoes\",\r\n\t\t\t\t\tdone: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Bread\",\r\n\t\t\t\t\tdone: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tname: \"TV Shows\",\r\n\t\t},\r\n\t]);\r\n\tconst [chosenList, setChosenList] = useState(0);\r\n\tconst [chosenValue, setChosenValue] = useState(list[0]);\r\n\tconst [errorListing, setErrorListing] = useState(\"\");\r\n\tfunction newList(e) {\r\n\t\tvar value = e.target.value;\r\n\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tif (value !== \"\") {\r\n\t\t\t\tsetList([...list, { id: list.length, name: value, tasks: [] }]);\r\n\t\t\t\tsetErrorListing(\"\");\r\n\t\t\t\te.target.value = \"\";\r\n\t\t\t}\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tsetErrorListing(\"*Type a list name first!\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction deleteList(index) {\r\n\t\tconst newArrayList = list.filter((item, i) => i !== index);\r\n\t\tlet List = newArrayList;\r\n\t\tsetList(List);\r\n\t}\r\n\r\n\tfunction handleRemoveItemList(index) {\r\n\t\tconst newArrayList = chosenValue.tasks.filter((item, i) => i !== index);\r\n\t\tlet List = [...list];\r\n\t\tList[chosenList].tasks = newArrayList;\r\n\t\tsetList(List);\r\n\t}\r\n\tfunction setTaskDone(index) {\r\n\t\tlet newArrayList = chosenValue.tasks;\r\n\t\tnewArrayList[index].done = true;\r\n\t\tlet List = [...list];\r\n\t\tList[chosenList].tasks = newArrayList;\r\n\t\tsetList(List);\r\n\t}\r\n\tfunction editTask(index, value) {\r\n\t\tlet newArrayList = chosenValue.tasks;\r\n\t\tnewArrayList[index].name = value;\r\n\t\tlet List = [...list];\r\n\t\tList[chosenList].tasks = newArrayList;\r\n\t\tsetList(List);\r\n\t}\r\n\r\n\tfunction newTask(value) {\r\n\t\tlet newArrayList = [];\r\n\t\tif (chosenValue.tasks !== undefined) {\r\n\t\t\tnewArrayList = chosenValue.tasks;\r\n\t\t} else {\r\n\t\t\tnewArrayList = [];\r\n\t\t}\r\n\t\tnewArrayList.push(value);\r\n\t\tlet List = [...list];\r\n\t\tList[chosenList].tasks = newArrayList;\r\n\t\tsetList(List);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"list\">\r\n\t\t\t<h2>What do I need to do today?</h2>\r\n\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t<div className=\"leftSide\">\r\n\t\t\t\t\t<h4>My list </h4>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{list.map((item, index) => (\r\n\t\t\t\t\t\t\t<div className=\"flex-button\">\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetChosenList(item.id);\r\n\t\t\t\t\t\t\t\t\t\tsetChosenValue(item);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={chosenList === item.id ? \"active\" : \"\"}\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => deleteList(index)}>Remove</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<label>New list</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\tnewList(e);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tplaceholder=\"Write list name...\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"error\">{errorListing}</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"rightSide\">\r\n\t\t\t\t\t<Item\r\n\t\t\t\t\t\tvalue={chosenValue}\r\n\t\t\t\t\t\tremoveTask={handleRemoveItemList}\r\n\t\t\t\t\t\tdoneTask={setTaskDone}\r\n\t\t\t\t\t\teditTask={editTask}\r\n\t\t\t\t\t\tnewTask={newTask}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport List from \"./List\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<List />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}